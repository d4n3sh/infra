apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: linuxserver/sonarr
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "America/Chicago"
        ports:
        - containerPort: 8989
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        volumeMounts:
        - name: downloads
          mountPath: /downloads
        - name: config
          mountPath: /config
      volumes:
      - name: downloads
        persistentVolumeClaim:
          claimName: shared-downloads
      - name: config
        persistentVolumeClaim:
          claimName: shared-config
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  labels:
    app: sonarr
spec:
  ports:
  - port: 80
    targetPort: 8989
  selector:
    app: sonarr
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
  - host: sonarr.k8s.home.d4n3sh.com
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: sonarr
            port:
              number: 80